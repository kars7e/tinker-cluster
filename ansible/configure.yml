---
- hosts: all
  become: true
  tasks:
  - name: Ensure network interfaces are managed by Network Manager
    copy:
      src: /etc/network/interfaces.network-manager
      dest: /etc/network/interfaces
      remote_src: yes

  - name: Set hostname
    hostname:
      name: "{{ inventory_hostname }}"

  - name: Build hosts file
    lineinfile:
      dest: /etc/hosts
      regexp: '.*{{ item }}$'
      line: "{{ hostvars[item]['ansible_eth0']['ipv4']['address'] }} {{item}}"
      state: present
    with_items: "{{ groups['all'] }}"

  - name: Copy SSH keys
    authorized_key:
      user: root
      state: present
      key: "{{ lookup('file', '/Users/kstepniewski/.ssh/id_rsa.pub') }}"

  - name: ensure systemd-networkd is disabled
    systemd:
      name: systemd-networkd
      enabled: no
      state: stopped

  - name: Disable dnsmasq in Network Manager
    lineinfile:
      path: /etc/NetworkManager/NetworkManager.conf
      regexp: '^dns='
      line: 'dns=default'
    register: nm_config 

  - name: Restart Network-Manager
    systemd:
      name: network-manager
      state: restarted
    when: nm_config.changed

  - name: Check if machine id has been already reconfigured
    stat:
      path: /etc/machine_id_configured
    register: machine_id_configured

  - name: Reconfigure machine id if not done yet
    shell: |
      dbus-uuidgen > /var/lib/dbus/machine-id
      rm /etc/machine-id
      systemd-machine-id-setup
    when: not machine_id_configured.stat.exists

  - name: Create check file if not exists
    file:
      path: /etc/machine_id_configured
      state: touch
      owner: root
      group: sys
      mode: 0555
    when: not machine_id_configured.stat.exists

  - name: disable & stop wpa_supplicant
    systemd:
      name: wpa_supplicant
      enabled: no
      state: stopped

  - name: Disable wifi driver via blacklist
    kernel_blacklist:
      name: r8723bs
      state: present

  - name: Unload wifi driver
    modprobe:
      name: r8723bs
      state: absent

  - name: disable swap
    shell: swapoff -a

  - name: pass bridged traffic to iptables
    sysctl:
      name: net.bridge.bridge-nf-call-iptables
      value: 1
      state: present

  - name: Upgrade packages
    apt:
      update_cache: yes
      upgrade: safe

  - name: Install nfs-commons (used in k8s to mount NFS shares)
    apt:
      name: "{{ item }}"
      state: installed
    with_items:
    - nfs-common

  - name: Add Google cloud key
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Add Kubernetes repository
    apt_repository:
      repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: 'kubernetes'

  - name: Install required binaries
    apt:
      name: "{{ item }}"
      state: latest
      update_cache: yes
    with_items:
    - kubeadm
    - kubelet
    - kubectl
    - kubernetes-cni